"""
Django settings for Devtool_Cloud_project project.

Generated by 'django-admin startproject' using Django 5.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# MEDIA_URL = "/media/"
MEDIA_ROOT = os.path.join(BASE_DIR / 'media')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-hy^n66@4g(#7!sma@v1o@mgf8wgs^=highkwj7$8sfxk19nh%='

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']



# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'MEM_MED',
    'storages'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'Devtool_Cloud_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Devtool_Cloud_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases



# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'HOST': 'localhost',
#         'USER': 'postgres',
#         'PASSWORD': '0930038864',
#         'NAME': 'MEM_MED',
#         'PORT' : '8000',
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'HOST': 'memmy-db.cvxvht5vvttw.us-east-1.rds.amazonaws.com',
        'USER': 'postgres',
        'PASSWORD': 'password',
        'NAME': 'postgres',
        'PORT' : '5432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Bangkok'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

STATICFILES_DIRS = [
    BASE_DIR / "static",
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# ทำหน้าที่เป็นแบ็กเอนด์ในการส่งอีเมล โดยโปรโตคอล SMTP (Simple Mail Transfer Protocol) จะถูกใช้ในการส่งอีเมล
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# กำหนด EMAIL_HOST ให้เป็น 'smtp.gmail.com' ซึ่งเป็นเซิร์ฟเวอร์ SMTP ของ Gmail หมายความว่า Django จะใช้ Gmail เป็นตัวกลางในการส่งอีเมลออกจากระบบ
EMAIL_HOST = 'smtp.gmail.com'
# กำหนดพอร์ตของเซิร์ฟเวอร์ SMTP ที่จะใช้ในการเชื่อมต่อกับ Gmail พอร์ต 587 เป็นพอร์ตที่ใช้สำหรับการเชื่อมต่อที่เข้ารหัส TLS (Transport Layer Security) ซึ่งเป็นมาตรฐานสำหรับการส่งข้อมูลที่ปลอดภัยผ่านเครือข่าย
EMAIL_PORT = 587
# กำหนดให้เปิดใช้งาน TLS ซึ่งเป็นการเข้ารหัสข้อมูลระหว่างการส่งข้อมูลผ่าน SMTP TLS จะช่วยปกป้องข้อมูลที่ส่งผ่านเครือข่ายจากการถูกดักฟังหรือแก้ไข
EMAIL_USE_TLS = True
# กำหนดชื่อผู้ใช้ (อีเมล) สำหรับบัญชี Gmail ที่จะใช้ส่งอีเมล (สร้างเอง)
EMAIL_HOST_USER = 'mem.med.notification@gmail.com'
# รหัสผ่านสำหรับบัญชี Gmail นี้ เพื่อยืนยันตัวตนและอนุญาตให้เซิร์ฟเวอร์ SMTP ของ Gmail ยอมรับการส่งอีเมลจากแอปพลิเคชัน
EMAIL_HOST_PASSWORD = 'wqod lbkp cleo vued'

DEFAULT_FROM_EMAIL = EMAIL_HOST_USER


# settings.py for s3 access
AWS_STORAGE_BUCKET_NAME = 'medicine-picture'
AWS_S3_SIGNATURE_NAME = 's3v4'
AWS_S3_REGION_NAME = 'us-east-1'  # e.g., 'us-east-1'
AWS_ACCESS_KEY_ID = None  # ไม่จำเป็นต้องตั้งค่า
AWS_SECRET_ACCESS_KEY = None  # ไม่จำเป็นต้องตั้งค่า
AWS_QUERYSTRING_AUTH = False


AWS_S3_CUSTOM_DOMAIN = f'{AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com'

# ตั้งค่าการเก็บไฟล์ media (เช่น รูปภาพที่ผู้ใช้ upload) บน S3
DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
MEDIA_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/media/'


